{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\react-weather-app\\\\src\\\\components\\\\search\\\\search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch('${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}', geoApiOptions).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"kvkC0QUHXbFmH+dsO7kURD9nFy4=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","_ref","_s","onSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","console","log","catch","err","error","handleOnChange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { AsyncPaginate } from \"react-select-async-paginate\"\r\nimport { GEO_API_URL,geoApiOptions } from \"../../api\";\r\n\r\nconst Search=({onSearchChange})=>{\r\n\r\n    const[search,setSearch]=useState(null);\r\n\r\n    const loadOptions=(inputValue)=>{\r\n        return fetch('${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}',geoApiOptions)\r\n        .then((response) =>response.json())\r\n        .then((response) => console.log(response))\r\n        .catch((err) =>console.error(err));\r\n    }\r\n\r\n    const handleOnChange=(searchData)=>{\r\n        setSearch(searchData);\r\n        onSearchChange(searchData);\r\n    }\r\n\r\n    return(\r\n        <AsyncPaginate\r\n        placeholder=\"search for city\"\r\n        debounceTimeout={600}\r\n        value={search}\r\n        onChange={handleOnChange}\r\n        loadOptions={loadOptions}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAACC,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAACC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAACC;EAAc,CAAC,GAAAF,IAAA;EAE1B,MAAK,CAACG,MAAM,EAACC,SAAS,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,WAAW,GAAEC,UAAU,IAAG;IAC5B,OAAOC,KAAK,CAAC,sEAAsE,EAACX,aAAa,CAAC,CACjGY,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAClCF,IAAI,CAAEC,QAAQ,IAAKE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CACzCI,KAAK,CAAEC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACtC,CAAC;EAED,MAAME,cAAc,GAAEC,UAAU,IAAG;IAC/Bb,SAAS,CAACa,UAAU,CAAC;IACrBf,cAAc,CAACe,UAAU,CAAC;EAC9B,CAAC;EAED,oBACInB,OAAA,CAACJ,aAAa;IACdwB,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAE,GAAI;IACrBC,KAAK,EAAEjB,MAAO;IACdkB,QAAQ,EAAEL,cAAe;IACzBX,WAAW,EAAEA;EAAY;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAzBKF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA2BZ,eAAeA,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}