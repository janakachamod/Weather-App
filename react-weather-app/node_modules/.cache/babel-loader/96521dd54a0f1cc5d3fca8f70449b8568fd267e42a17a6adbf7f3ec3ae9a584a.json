{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\react-weather-app\\\\src\\\\components\\\\search\\\\search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n  const loadOptions = async () => {\n    try {\n      const response = await fetch('${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}', geoApiOptions);\n      const result = await response.text();\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"kvkC0QUHXbFmH+dsO7kURD9nFy4=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","_ref","_s","onSearchChange","search","setSearch","loadOptions","response","fetch","result","text","console","log","error","handleOnChange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { AsyncPaginate } from \"react-select-async-paginate\"\r\nimport { GEO_API_URL,geoApiOptions } from \"../../api\";\r\n\r\nconst Search=({onSearchChange})=>{\r\n\r\n    const[search,setSearch]=useState(null);\r\n\r\n    const loadOptions=async ()=>{\r\n        try {\r\n            const response = await fetch('${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}', geoApiOptions);\r\n            const result = await response.text();\r\n            console.log(result);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleOnChange=(searchData)=>{\r\n        setSearch(searchData);\r\n        onSearchChange(searchData);\r\n    }\r\n\r\n    return(\r\n        <AsyncPaginate\r\n        placeholder=\"search for city\"\r\n        debounceTimeout={600}\r\n        value={search}\r\n        onChange={handleOnChange}\r\n        loadOptions={loadOptions}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAACC,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAACC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAACC;EAAc,CAAC,GAAAF,IAAA;EAE1B,MAAK,CAACG,MAAM,EAACC,SAAS,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,WAAW,GAAC,MAAAA,CAAA,KAAU;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsE,EAAEX,aAAa,CAAC;MACnH,MAAMY,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,cAAc,GAAEC,UAAU,IAAG;IAC/BV,SAAS,CAACU,UAAU,CAAC;IACrBZ,cAAc,CAACY,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIhB,OAAA,CAACJ,aAAa;IACdqB,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAE,GAAI;IACrBC,KAAK,EAAEd,MAAO;IACde,QAAQ,EAAEL,cAAe;IACzBR,WAAW,EAAEA;EAAY;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAArB,EAAA,CA5BKF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AA8BZ,eAAeA,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}